import re
import sys
from pathlib import Path

def parse_nmap_file(file_path):
    """
    –ü–∞—Ä—Å–∏—Ç—å –æ–¥–∏–Ω .txt —Ñ–∞–π–ª –∑—ñ –∑–≤—ñ—Ç–æ–º nmap, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —Ç–∞–º –∫—ñ–ª—å–∫–∞ –∑–≤—ñ—Ç—ñ–≤ –ø—ñ–¥—Ä—è–¥.
    """
    report_data = []

    with open(file_path, 'r') as f:
        content = f.read()

    # –†–æ–∑–±–∏–≤–∞—î–º–æ –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ –ø–æ –∫–æ–∂–Ω–æ–º—É –∑–≤—ñ—Ç—É nmap
    reports = re.split(r'Nmap scan report for ', content)
    for chunk in reports[1:]:  # –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –±—É–¥–µ –ø–æ—Ä–æ–∂–Ω—ñ–π
        lines = chunk.strip().splitlines()
        ip = lines[0].strip()
        text = "\n".join(lines)

        if "Host is up" not in text:
            report_data.append(f"[{ip}] üî¥ Host is down")
            continue

        if "Skipping host" in text:
            report_data.append(f"[{ip}] ‚ö†Ô∏è Host skipped due to timeout")
            continue

        ports_info = re.findall(r'(\d+/tcp)\s+open\s+([^\s]+)(?:\s+(.*))?', text)
        if ports_info:
            report_data.append(f"[{ip}] üü¢ Host is up with open ports:")
            for port, service, version in ports_info:
                line = f"    - {port:10} | {service:10} | {version.strip() if version else 'N/A'}"
                report_data.append(line)
        else:
            report_data.append(f"[{ip}] üü¢ Host is up, but no open ports detected")

    return report_data

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 nmap_parser.py <nmap_report.txt>")
        sys.exit(1)

    file_path = sys.argv[1]
    result = parse_nmap_file(file_path)

    output_file = "nmap_summary.txt"
    with open(output_file, "w") as f:
        f.write("\n".join(result))

    print(f"‚úî Summary written to {output_file}")
